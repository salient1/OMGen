/**
 * This class was auto-generated by $appName.
 * $date
 */
package $package;

public class $omClassName {
    private $doClassName $doName;

#foreach($constructor in $constructors)
    public static $omClassName with(#injectWithArguments($constructor)) {
        $doName = new $doClassName(#injectConstructorArguments($constructor));
        return new $omClassName();
    }
#end

    public $doClassName create() {
        return $doName;
    }

#foreach($method in $methods)
    public $omClassName ${method.shortName}(${method.argType} ${method.shortName}) {
        $doName.${method.name}(${method.shortName}); return this;
    }
    
#end
}

#macro(injectWithArguments $constructor)
#foreach($parameterInfo in $constructor.parameterInfos)${parameterInfo.argType} ${parameterInfo.argName}#if ($velocityCount < $constructor.parameterInfos.size()), #end#end
#end

#macro(injectConstructorArguments $constructor)
#foreach($parameterInfo in $constructor.parameterInfos)${parameterInfo.argName}#if ($velocityCount < $constructor.parameterInfos.size()), #end#end
#end